app_mode = development

[security]
# disable
disable_initial_admin_creation = true

[auth.generic_oauth]
enabled = true
allow_sign_up = true

# button name in UI
name = KEYCLOAK

# client settings from Keycloak
client_id = grafana
client_secret = grafana-secret
scopes = openid email profile offline_access roles

# parse access_token field from keycloak response to look for attributes
id_token_attribute_name = access_token
email_attribute_path = email
login_attribute_path = preferred_username
name_attribute_path = name
auth_url = http://keycloak:8080/realms/labrealm/protocol/openid-connect/auth
token_url = http://keycloak:8080/realms/labrealm/protocol/openid-connect/token
api_url = http://keycloak:8080/realms/labrealm/protocol/openid-connect/userinfo
allow_assign_grafana_admin = true  # enable grafanaAdmin login through Keycloak

### for realm roles
# role_attribute_path = (realm_access.roles && (contains(realm_access.roles[*], 'admin') && 'Admin' || contains(realm_access.roles[*], 'maintainer') && 'Editor' || contains(realm_access.roles[*], 'read-only') && 'Viewer')) || 'None'
### for client roles
role_attribute_path = (resource_access.grafana.roles && (contains(resource_access.grafana.roles[*], 'Admin') && 'Admin' || contains(resource_access.grafana.roles[*], 'Editor') && 'Editor' || contains(resource_access.grafana.roles[*], 'Viewer') && 'Viewer')) || 'None'

[auth]
disable_login_form = true

[log]
level = debug
